
   ToDo
----------

Fråga:


Nästa gång:
	
	


Ordning:
	




Uppgifter:

	
	
	
	

Aktiv chat beteende:
	- Vi ska inte ha flera invites samtidigt
	- När man skickar en request ska aktiv chat hamna i waiting state (exit knapp)
	- Om den andra personen accepterar hamnar aktiv chat i chat state (exit knapp)
	- Om den andra personen skickar en request till dig hamnar akiv chat i accept state (accept och decline knapp)


Klart:
	- Flytta SendRequest från chatservice till requestservice
	- (Lab1) Meddelande om ingen lyssnar på ip + port som man skickat request till
	- (Lab1) Respons om en skickad request blir accepterad eller nekad
	- (Allmänt) Implementera JSON funktionalitet
	- (Allmänt) Bestämma hur aktiv chat ska fungera
	- Lös saker om användaren stänger av programmet
	- Fixa accept respons
	- (Lab1) Meddelande om anslutning har avbrutits av någon anledning
	- Aktivera chat
	- (Lab2) Ska kunna öppna en chat och skicka meddelanden mellan 2 användare
	- (Lab2) Panel och ObservableCollection ska användas för konversation
	- (Lab3) Chatter ska sparas och laddas in som en historik lista
	- Knapp fokuseras så man endast kan trycka enter när man vill logga in, skicka request och skicka meddelanden
	- (Lab3) Historik ska lagras lokalt som json eller xml
	- (Lab3) Historik ska vara sorterad på datum och tid
	- (Lab3) Man ska kunna ladda in och se gamla konversationer
	- Kolla på exception best practices
	- Skriv debug meddelanden tydligare (STATUS:, ERROR:, EXCEPTION:, RESULT:)
	- Skriva om strukturen
	- (Lab3) Man ska kunna söka i historik-listan
	- (Allmänt) Lösa validering av input
	- (Allmänt) Fundera på felhantering
	- (Lab4) Skicka buzz som ljud eller skak i fönster
	- (Lab4) Skicka bilder som ska lagras lokalt
	- (Lab2/Lab4) Arv ska användas för att skapa meddelande-klass
	- (Allmänt) Ha en egen exception som används

Quality Of Life(Inte jätteviktigt):

	- Scroll viewn ska hoppa till botten när ett meddelande läggs till utanför fönstrets höjd
